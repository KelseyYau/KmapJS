{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../dist/geometry/geometry.js","webpack:///../dist/geometry/point.js","webpack:///../dist/geometry/polygon.js","webpack:///../dist/geometry/polyline.js","webpack:///../dist/index.js","webpack:///../dist/map.js","webpack:///./demo-01.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAO;AACP,eAAe;AACf;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAsC;AAC/B,oBAAoB,kDAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAsC;AAC/B,sBAAsB,kDAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAsC;AAC/B,uBAAuB,kDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsB;AACc;AACH;AACG;AACD;;;;;;;;;;;;;ACJnC;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnGA;AAAA;AAAsD;;AAEtD;AACA,oBAAoB,yCAAG;AACvB,sBAAsB,2CAAK;AAC3B;;AAEA,yBAAyB,8CAAQ;AACjC;;AAEA,wBAAwB,6CAAO;AAC/B;AACA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./demo-01.js\");\n","export class Geometry {\r\n    draw(ctx) { }\r\n}\r\n","import { Geometry } from './geometry';\r\nexport class Point extends Geometry {\r\n    constructor(x, y) {\r\n        super();\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n    draw(ctx) {\r\n        ctx.save();\r\n        ctx.strokeStyle = \"#ff0000\";\r\n        ctx.fillStyle = \"#ff0000\";\r\n        ctx.beginPath();\r\n        // 用点画圆\r\n        ctx.arc(this._x, this._y, Point.RADIUS, 0, Math.PI * 2, true);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n}\r\nPoint.RADIUS = 10;\r\n","import { Geometry } from \"./geometry\";\r\nexport class Polygon extends Geometry {\r\n    // 考虑环的情况的多边形\r\n    constructor(coordinates) {\r\n        super();\r\n        this._coordinates = coordinates;\r\n    }\r\n    draw(ctx) {\r\n        ctx.save();\r\n        ctx.strokeStyle = \"#00ff00\";\r\n        ctx.fillStyle = \"#ff0000\";\r\n        ctx.lineWidth = 2;\r\n        ctx.beginPath();\r\n        this._coordinates.forEach(ring => {\r\n            ring.forEach((point, index) => {\r\n                let x = point[0], y = point[1];\r\n                if (index === 0) {\r\n                    ctx.moveTo(x, y);\r\n                }\r\n                else {\r\n                    ctx.lineTo(x, y);\r\n                }\r\n            });\r\n        });\r\n        ctx.closePath();\r\n        ctx.fill(\"evenodd\");\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n}\r\n","import { Geometry } from \"./geometry\";\r\nexport class Polyline extends Geometry {\r\n    constructor(coordinates) {\r\n        super();\r\n        this._coordinates = coordinates;\r\n    }\r\n    draw(ctx) {\r\n        ctx.save();\r\n        ctx.strokeStyle = \"#ff0000\";\r\n        ctx.lineWidth = 2;\r\n        ctx.beginPath();\r\n        this._coordinates.forEach((point, index) => {\r\n            let x = point[0], y = point[1];\r\n            if (index === 0) {\r\n                ctx.moveTo(x, y);\r\n            }\r\n            else {\r\n                ctx.lineTo(x, y);\r\n            }\r\n        });\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n}\r\n","export * from './map';\r\nexport * from './geometry/geometry';\r\nexport * from './geometry/point';\r\nexport * from './geometry/polyline';\r\nexport * from './geometry/polygon';\r\n","export class Map {\r\n    constructor(id) {\r\n        this._drag = {\r\n            flag: false,\r\n            start: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            end: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        this._geometries = [];\r\n        this._canvas = document.getElementById(id);\r\n        this._ctx = this._canvas.getContext(\"2d\");\r\n        this._onDoubleClick = this._onDoubleClick.bind(this);\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onWheel = this._onWheel.bind(this);\r\n        this._canvas.addEventListener(\"dblclick\", this._onDoubleClick);\r\n        this._canvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n        this._canvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n        this._canvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n        this._canvas.addEventListener(\"wheel\", this._onWheel);\r\n    }\r\n    addGeometry(geometry) {\r\n        geometry.draw(this._ctx);\r\n        this._geometries.push(geometry);\r\n    }\r\n    redraw() {\r\n        this._ctx.save();\r\n        this._ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n        this._ctx.restore();\r\n        this._geometries.forEach(geometry => geometry.draw(this._ctx));\r\n    }\r\n    clear() {\r\n        this._ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n    _onDoubleClick(event) {\r\n        this._ctx.scale(2, 2);\r\n        this.redraw();\r\n    }\r\n    _onMouseDown(event) {\r\n        this._drag.flag = true;\r\n        this._drag.start.x = event.x;\r\n        this._drag.start.y = event.y;\r\n    }\r\n    _onMouseMove(event) {\r\n    }\r\n    _onMouseUp(event) {\r\n        if (this._drag.flag) {\r\n            this._drag.end.x = event.x;\r\n            this._drag.end.y = event.y;\r\n            const matrix = this._ctx.getTransform();\r\n            this._ctx.translate((this._drag.end.x - this._drag.start.x) / matrix.a, (this._drag.end.y - this._drag.start.y) / matrix.b);\r\n            this.redraw();\r\n        }\r\n        this._drag.flag = false;\r\n    }\r\n    _onWheel(event) {\r\n        event.preventDefault();\r\n        let scale = 1;\r\n        const sensitivity = 100;\r\n        const delta = event.deltaY / sensitivity;\r\n        if (delta < 0) {\r\n            // 鼠标放大\r\n            scale *= delta * -2;\r\n        }\r\n        else {\r\n            // 鼠标缩小\r\n            scale /= delta * 2;\r\n        }\r\n        // 交互效果：鼠标当前位置 屏幕坐标不变情况下进行缩放  即 x2 = x1\r\n        // 第一种方案，坐标系不变，变坐标的值来实现\r\n        // 1. 将屏幕坐标 x1 转换成初始的坐标 x0 = (x1 - e1) * a1  初始的矩阵(1,0,0,1,0,0)   e1  a1 所代表是 距离尺度 和 比例尺度吗？\r\n        //2.初始坐标x0 转成 现屏幕坐标x2  a2 * x0 + e2 = x2    e2 = x2 - a2 * x0  代入1式 e2 = x2 - a2 * (x1 - e1) / a1\r\n        //3.已知scale = a2 / a1  故 e2 = x2 - scale * (x1 - e1)\r\n        //4.另矩阵变换 a1 * e + e1 = e2\r\n        //5.联立3和4  求得 e = (x2 - scale * (x1 - e1) - e1) / a1\r\n        //PS: 第4点详解: matrix1 * matrix = matrix2；matrix1当前矩阵，matrix2为变换后的结果矩阵，matrix为变换矩阵；我们现在要求matrix的e，而根据矩阵计算，a1 * e + e1 = e2。其中a1是matrix1的a，e是matrix的e，e1是matrix1的e，e2是matrix2的e。\r\n        const matrix = this._ctx.getTransform();\r\n        const a1 = matrix.a, e1 = matrix.e, x1 = event.x, x2 = x1; //放大到中心点 x2 = this._canvas.width / 2\r\n        const e = (x2 - scale * (x1 - e1) - e1) / a1;\r\n        const d1 = matrix.d, f1 = matrix.f, y1 = event.y, y2 = y1; //放大到中心点 y2 = this._canvas.height / 2\r\n        const f = (y2 - scale * (y1 - f1) - f1) / d1;\r\n        this._ctx.transform(scale, 0, 0, scale, e, f);\r\n        this.redraw();\r\n    }\r\n    destroy() {\r\n        this._canvas.removeEventListener(\"dblclick\", this._onDoubleClick);\r\n        this._canvas.removeEventListener(\"mousedown\", this._onMouseDown);\r\n        this._canvas.removeEventListener(\"mousemove\", this._onMouseMove);\r\n        this._canvas.removeEventListener(\"mouseup\", this._onMouseUp);\r\n        this._canvas.removeEventListener(\"wheel\", this._onWheel);\r\n    }\r\n}\r\n","import {Map, Point, Polyline, Polygon} from \"../dist\"; //此引用方式归功于index.ts,如没有需单独引用到文件\r\n\r\nwindow.load = () => {\r\n    const map = new Map(\"foo\");\r\n    const point = new Point(100, 100);\r\n    map.addGeometry(point);\r\n\r\n    const polyline = new Polyline([[150, 100], [250, 200]]);\r\n    map.addGeometry(polyline);\r\n\r\n    const polygon = new Polygon([[[150, 300], [250, 400], [180, 450]]]);\r\n    map.addGeometry(polygon);\r\n}"],"sourceRoot":""}